{"id":"node_modules/sdp-transform/lib/writer.js","dependencies":[{"name":"/Users/ojack/PROJECTS/LIVE_LAB/mediasoup-demo-simple/client/package.json","includedInParent":true,"mtime":1601625160032},{"name":"/Users/ojack/PROJECTS/LIVE_LAB/mediasoup-demo-simple/client/.babelrc","includedInParent":true,"mtime":1601625160032},{"name":"/Users/ojack/PROJECTS/LIVE_LAB/mediasoup-demo-simple/client/node_modules/sdp-transform/package.json","includedInParent":true,"mtime":1601625707082},{"name":"./grammar","loc":{"line":1,"column":22},"parent":"/Users/ojack/PROJECTS/LIVE_LAB/mediasoup-demo-simple/client/node_modules/sdp-transform/lib/writer.js","resolved":"/Users/ojack/PROJECTS/LIVE_LAB/mediasoup-demo-simple/client/node_modules/sdp-transform/lib/grammar.js"}],"generated":{"js":"var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/sdp-transform/lib/writer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}}],"sources":{"node_modules/sdp-transform/lib/writer.js":"var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n"},"lineCount":115}},"error":null,"hash":"90d134b621d77f67ab9967571286ff05","cacheData":{"env":{}}}