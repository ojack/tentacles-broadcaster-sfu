{"id":"node_modules/sdp-transform/lib/parser.js","dependencies":[{"name":"/Users/ojack/PROJECTS/LIVE_LAB/mediasoup-demo-simple/___client/package.json","includedInParent":true,"mtime":1601625160032},{"name":"/Users/ojack/PROJECTS/LIVE_LAB/mediasoup-demo-simple/___client/.babelrc","includedInParent":true,"mtime":1601625160032},{"name":"/Users/ojack/PROJECTS/LIVE_LAB/mediasoup-demo-simple/___client/node_modules/sdp-transform/package.json","includedInParent":true,"mtime":1601625707082},{"name":"./grammar","loc":{"line":37,"column":22},"parent":"/Users/ojack/PROJECTS/LIVE_LAB/mediasoup-demo-simple/___client/node_modules/sdp-transform/lib/parser.js","resolved":"/Users/ojack/PROJECTS/LIVE_LAB/mediasoup-demo-simple/___client/node_modules/sdp-transform/lib/grammar.js"}],"generated":{"js":"var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/sdp-transform/lib/parser.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}}],"sources":{"node_modules/sdp-transform/lib/parser.js":"var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n"},"lineCount":125}},"error":null,"hash":"06c28794228334637b0c475bc4331e6a","cacheData":{"env":{}}}